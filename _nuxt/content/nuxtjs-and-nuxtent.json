{
  "title": "使用Nuxt.js及Nuxtent建立Blog的心得",
  "bgImageUrl": "/images/05/05-0.jpg",
  "meta": {
    "index": 8,
    "fileName": "2018-06-23-NuxtjsAndNuxtent.md",
    "section": "/",
    "dirName": "/"
  },
  "date": "2018-06-23",
  "path": "/nuxtjs-and-nuxtent",
  "permalink": "/nuxtjs-and-nuxtent",
  "anchors": [],
  "body": "<p>Nuxt.js是內建SSR的vue.js框架，我最感興趣的部份是可輸出靜態的Html，如此就可以輕鬆的將程式部署至GitHub Page上，並且可以使用module來擴充功能。</p>\n<p>當我看到了Nuxtent這個module，它是可以取得Markdown內容的module，所以想將Blog用Nuxt.js重新翻寫。</p>\n<h2>Nuxtent Template</h2>\n<p>第一步快速建立的話，可使用<a href=\"https://github.com/nuxt-community/nuxtent-template\">Nuxtent Template</a>建立一個基本的網站架構，需要事先安裝<a href=\"https://github.com/vuejs/vue-cli\">vue-cli</a>。</p>\n<pre class=\"language-\"><code class=\"language-\">vue init nuxt-community/nuxtent-template my-site\n</code></pre>\n<h2>網站架構</h2>\n<img class=\"img-responsive\" src=\"/images/05/05-1.png\">\n<h3>page</h3>\n<p>建立網站的路由，例如在目錄中建立about.vue，網址會成為localhost:3000/about。</p>\n<h3>static</h3>\n<p>靜態資源，例如：圖片，路徑會基於根目錄，例如/images/bg.png</p>\n<h3>content</h3>\n<p>Nuxtent module特定的目錄，放置Markdown檔案的地方，也就是放入文章的地方</p>\n<h3>layout</h3>\n<p>預設layout為layout.vue，也可以自定layout，之後使用layout屬性指定自定的layout</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">asyncData</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      posts<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">$content</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Thomas Blog'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  layout<span class=\"token punctuation\">:</span> <span class=\"token string\">'customLayout'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2>設定檔</h2>\n<p>nuxtent.config.js</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Prism <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prismjs'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    permalink<span class=\"token punctuation\">:</span> <span class=\"token string\">'/:slug'</span><span class=\"token punctuation\">,</span>\n    page<span class=\"token punctuation\">:</span> <span class=\"token string\">'/_content'</span><span class=\"token punctuation\">,</span>\n    generate<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// for static build</span>\n      <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'getAll'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    isPost<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  api<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    baseURL<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://localhost:3200'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  parsers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    md<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        config<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">highlight</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> lang<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token string\">`&lt;pre class=\"language-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lang<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;code class=\"language-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lang<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Prism<span class=\"token punctuation\">.</span><span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>lang<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/code>&lt;/pre>`</span></span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3>content</h3>\n<ul>\n<li>\n<p>permalink：設定文章路徑的顯示方式。</p>\n</li>\n<li>\n<p>page：指定顯示文章內容的檔案名稱，預設為_cotent，即指向_cotent.vue。按照文件可以設定為多個。</p>\n</li>\n<li>\n<p>isPost:：查看<a href=\"https://nuxtent.now.sh/guide/writing\">官方文件</a>的說明不是很了解這個屬性的用法，但當看了<a href=\"https://github.com/nuxt-community/nuxtent-module/blob/9423a753c43bbbe69395b400f90b1291ac935084/lib/content/page.js#L161\">原始碼</a>後發現</p>\n</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">get</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isDev <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cached<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> filePath<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> section <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> meta\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>isPost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> fileDate <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/!?(\\d{4}-\\d{2}-\\d{2})/</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// YYYY-MM-DD</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fileDate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Post in \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>section<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" does not have a date!`</span></span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n          cached<span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> fileDate<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> stats <span class=\"token operator\">=</span> <span class=\"token function\">statSync</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n          cached<span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> dateFns<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>stats<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">,</span> <span class=\"token string\">'YYYY-MM-DD'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> cached<span class=\"token punctuation\">.</span>date\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>當true時，<a href=\"http://xn--markdown2017-06-20-HelloWorld-x273cn41k3m0b844bglqc32kwg5ehhf8n6l.md\">需要將markdown檔案名稱設成2017-06-20-HelloWorld.md</a>，即會取得檔名上的日期做為文章日期。</p>\n<p>當false，會使用檔案修改日期做為文章日期。</p>\n<h3>parser</h3>\n<p>我是參考<a href=\"https://nuxtent.now.sh/guide/configuration\">官方文件</a>，使用prismjs將Mardown的程式碼加上著色器功能。</p>\n<h2>取得內容</h2>\n<p>可以參考_content.vue的程式碼，使用<strong>get</strong>取得目前路徑的內容。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">post<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">$content</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>如果是要取得所有文章的話，可以使用<strong>getAll</strong>這個方法。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">posts<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">$content</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2>評論功能</h2>\n<p>想使用基於GitHub issues的評論功能，有發現<a href=\"https://github.com/imsun/gitment\">gitment</a>這個套件剛好符合我的需要，安裝及設定都很簡單。</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>row<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PostHeader <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/PostHeader'</span>\n<span class=\"token keyword\">import</span> Gitment <span class=\"token keyword\">from</span> <span class=\"token string\">'gitment'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">asyncData</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> app<span class=\"token punctuation\">,</span> route<span class=\"token punctuation\">,</span> payload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      post<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">$content</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> gitment <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gitment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional</span>\n      owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'thomascsd'</span><span class=\"token punctuation\">,</span>\n      repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'thomascsd.github.io'</span><span class=\"token punctuation\">,</span>\n      oauth<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        client_id<span class=\"token punctuation\">:</span> <span class=\"token string\">'client_id'</span><span class=\"token punctuation\">,</span>\n        client_secret<span class=\"token punctuation\">:</span> <span class=\"token string\">'client_secret'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    gitment<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'comments'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    PostHeader\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>我是參考這篇<a href=\"https://ihtcboy.com/2018/02/25/2018-02-25_Gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%8E%A5%E5%85%A5%E8%B8%A9%E5%9D%91%E6%95%99%E7%A8%8B/\">文章</a>。</p>\n<p>要注意的點是，第一次會顯示<strong>Error:Comments Not Initialized</strong>。</p>\n<img class=\"img-responsive\" src=\"/images/05/05-5.png\">\n<p>需要登入自己的Github帳號後，啟動應用程式。</p>\n<img class=\"img-responsive\" src=\"/images/05/05-6.png\">\n<p>成功之後，就會變成下圖</p>\n<img class=\"img-responsive\" src=\"/images/05/05-7.png\">\n<h2>部署</h2>\n<p>將靜態檔案部署至Github pages，我遇到了一些問題，按照範例設定會將NODE_ENV='production’及baseUrl會成為正式部署的路徑，<a href=\"http://xn--Blogthomascsd-9i5u501gd7hh21bk60f5r2a.github.io\">例如我的Blog網址thomascsd.github.io</a>。</p>\n<p>當使用npm generate時，卻會出現下列錯誤</p>\n<img class=\"img-responsive\" src=\"/images/05/05-2.png\">\n<p>最後發現，使用下列步驟就OK了</p>\n<ul>\n<li>不需要加上NODE_ENV</li>\n<li>baseUrl設定成預設的localhost:3200，並執行npm generate</li>\n<li>再使用VSCode搜索localhost:3200，即會發現dist/api.js 內容有baseURL:localhost:3200，然後將網址替換成正式環境，<a href=\"http://xn--Blogthomascsd-l27wu1wv30bzw6en90a.github.io\">如我的Blog網址thomascsd.github.io</a></li>\n</ul>\n<img class=\"img-responsive\" src=\"/images/05/05-3.png\">\n<ul>\n<li>最後就可以部署至GitHub page</li>\n</ul>\n<img class=\"img-responsive\" src=\"/images/05/05-4.png\">\n<h2>結論</h2>\n<p>很方便將一個Blog建立起來，但是缺乏一些功能，例如標籤、Archive功能，這些都要自己實作出來。原始碼可以參考<a href=\"https://github.com/thomascsd/thomascsd-blog\">這裡</a>。</p>\n"
}