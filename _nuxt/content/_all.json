[
  {
    "title": "談談JavaScript Module part1",
    "bgImageUrl": "/images/08/08-0.jpg",
    "meta": {
      "index": 0,
      "fileName": "2018-10-31-ModulePattern.md",
      "section": "/",
      "dirName": "/"
    },
    "date": "2018-10-31",
    "path": "/module-pattern",
    "permalink": "/module-pattern",
    "anchors": [],
    "body": "<p>這次想談談模組(Module)，是JavaScript的設計模式的其中的一個，一般而言，我們都會希望程式有架構，被重覆使用，這時可以將程式分成一個個的模組，會用兩篇文章討論這個主題，這一篇是講述Module pattern，下一篇會講述ES2015 module。</p>\n<h2>Module pattern</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// private function</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n     <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`&lt;li>Thomas</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> $li <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li:last'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    $li<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span>    <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//public function</span>\n    <span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">removeUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Module pattern的寫法就像上面這樣，使用IIFE（ Immediately Invoked Function Expression）將程式邏輯封裝，在IIFE中定義私有數數或是方法，只有要公開的方法才會傳出，這樣就很像OOP中的封裝概念，模擬私有變數及公有變數，範例程式碼在<a href=\"https://jsfiddle.net/thomascsd/b354wuoz/35/\">這邊</a>可以看到。</p>\n<h2>Revealing Module Pattern</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n     <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`&lt;li>Thomas</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">removeUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> $li <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li:last'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    $li<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span>    <span class=\"token punctuation\">{</span>\n    addUser<span class=\"token punctuation\">:</span> addUser<span class=\"token punctuation\">,</span>\n    removeUser<span class=\"token punctuation\">:</span> removeUser\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>另外一種Module pattern的寫法，我們都是用這種寫法，程式碼的架構變得更清楚，範例程式碼在<a href=\"https://jsfiddle.net/thomascsd/r2pm4cj1/\">這邊</a>可以看到。</p>\n<p>每個模組都是全域變數，又覺得有點鬆散及零亂，所以需要另一種型式來組合，這時需要命名空間的協助。</p>\n<h2>JavaScript模擬命名空間</h2>\n<p>JavaScript是沒有命名空間的，但可以使用物件來模擬。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">NS</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">NS</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在window下建立屬性，當有NS這個屬性時，就使用原本的NS屬性，不然初始化一個空物件，我們習慣一個模組一個檔案，所以有多個模組時，每個模組會存取到同一個命名空間。這邊是以NS為例子，可以是任何的名稱，我們習慣是以目前的專案名稱的大寫英文來命名。</p>\n<h2>Module pattern + namespace</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n     <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`&lt;li>Thomas</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">removeUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> $li <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li:last'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    $li<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  window<span class=\"token punctuation\">.</span><span class=\"token constant\">NS</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">NS</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token constant\">NS</span><span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    addUser<span class=\"token punctuation\">:</span> addUser<span class=\"token punctuation\">,</span>\n    removeUser<span class=\"token punctuation\">:</span> removeUser\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>這樣的寫法我覺得是module pattern的變形，window下只有一個定義的屬性，也就是我所定義的命名空間物件，之後將所有模組都設為這命名空間的屬性。範例程式在<a href=\"https://jsfiddle.net/thomascsd/g6h8wza1/6/\">這裡</a></p>\n<h2>TypeScript</h2>\n<pre class=\"language-'typescript\"><code class=\"language-'typescript\">namespace NS {\n  function addUser(){\n     const count = $('li').length;\n     $('#list').append(`<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Thomas${count}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>`);\n  }\n  function removeUser(){\n    const count = $('li').length;\n    const $li = $('#list').find('li:last');\n    $li.remove();\n  }\n  export const user = {\n    addUser: addUser,\n    removeUser: removeUser  \n  }\n}\n\n</code></pre>\n<p>TypeScript本身就有命名空間的關鍵字，與Module pattern的寫法很相似，差別在於最後是用export的方式，傳出所要公開的function。</p>\n<img class=\"img-responsive\" src=\"/images/08/08-1.png\">\n<p>並且我們發現，上面這段TypeScript轉成的JavaScript（如上圖所示），與上節的Module + Namespace的程式碼很相似，也是先宣告全堿變數NS，接著判斷NS是否已存在，之後將定義的模組設為NS的屬性。</p>\n<h2>結論</h2>\n<p>Module pattern我個人覺得是很方便的模式，可以將煩雜的程式碼切割成一塊塊的模組，讓它們彼此之間合作。</p>\n"
  },
  {
    "title": "draxt.js-簡化存取檔案的小幫手",
    "meta": {
      "index": 1,
      "fileName": "2018-09-07-TutorialOfDraxtjs.md",
      "section": "/",
      "dirName": "/"
    },
    "date": "2018-09-07",
    "path": "/tutorial-of-draxtjs",
    "permalink": "/tutorial-of-draxtjs",
    "anchors": [],
    "body": "<p>Node.js處理檔案我個人覺得不是很方便，有時候會覺得卡卡的。之前有發現Node.js套件<a href=\"https://github.com/ramhejazi/draxt\">draxt.js</a>，它封裝了<a href=\"https://github.com/isaacs/node-glob\">glob</a>和<a href=\"https://github.com/jprichardson/node-fs-extra\">fs-extra</a>這兩個套件，並提供類似jQuery的語法，讓檔案的處理變簡單了。</p>\n<p>因為我的Blog是分成兩個專案，一個是開發使用，一個是實際Blog的網站，而我使用nuxt.js建立Blog的心得，可以參考之前的<a href=\"/example-of-promise\">文章</a>。之前的複製檔案都是用手動，所以想寫個小程式幫助複製檔案，剛好趁這個機會練習使用draxt.js這個套件。</p>\n<h2>原始碼</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> util <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'util'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'draxt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> consola <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'consola'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> readFileAsync <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>readFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> writeFileAsync <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>writeFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> rootPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> blogDistPath <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/thomascsd.github.io/`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> $blogSrc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist/**'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> $blogDist <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> blogDistPath <span class=\"token operator\">+</span> <span class=\"token string\">'**'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    cwd<span class=\"token punctuation\">:</span> rootPath\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  $blogDist\n    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n      node <span class=\"token operator\">=></span>\n        <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>baseName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> node <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      consola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token string\">`step1-1:刪除thomascsd.github.io內的檔案，name:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>node<span class=\"token punctuation\">.</span>pathName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  consola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>`step2<span class=\"token punctuation\">:</span>api<span class=\"token punctuation\">.</span>js的localhost更換成thomascsd<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io`<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> $api <span class=\"token operator\">=</span> $blogSrc\n    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n      node <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>baseName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>extension <span class=\"token operator\">===</span> <span class=\"token string\">'js'</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">readFileAsync</span><span class=\"token punctuation\">(</span>$api<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  content <span class=\"token operator\">=</span> content\n    <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/http:\\/\\/localhost:3200/i</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://thomascsd.github.io'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">writeFileAsync</span><span class=\"token punctuation\">(</span>$api<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> blogPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>rootPath<span class=\"token punctuation\">,</span> blogDistPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  $blogSrc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  $blogSrc<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> node <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    consola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n      `step3<span class=\"token punctuation\">:</span>復製檔案至thomascsd<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io內的檔案，name<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">}</span>`\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>blogPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      consola<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">=></span> consola<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h2>程式說明</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> util <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'util'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'draxt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> consola <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'consola'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> readFileAsync <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>readFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> writeFileAsync <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>writeFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>一開始戴入所需的套件，這邊有用util.promisify將原本是callback型式的readFile及writeFile，轉換成Promise的型式。</p>\n<p>因為draxt.js的方法都是設計成回傳Promise物件，可以使用async/await的語法，所以這裡用async的IIFE將檔案操作的邏輯包起來。關於Promise，可以參考我的上一篇的<a href=\"/nuxtjs-and-nuxtent\">文章</a>。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> rootPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> blogDistPath <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/thomascsd.github.io/`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> $blogSrc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist/**'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> $blogDist <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> blogDistPath <span class=\"token operator\">+</span> <span class=\"token string\">'**'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\ncwd<span class=\"token punctuation\">:</span> rootPath\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>jQuery是使用CSS Selector來選擇元素，而draxt.js是使用glob pattern選取檔案或目錄，關於glog pattern可以參考<a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\">文件</a>。</p>\n<h3>第一步刪除thomascsd.github.io內的檔案</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">$blogDist\n  <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n    node <span class=\"token operator\">=></span>\n      <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>baseName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n      node<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> node <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    consola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token string\">`step1-1:刪除thomascsd.github.io內的檔案，name:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>node<span class=\"token punctuation\">.</span>pathName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>先用filter將包含.的目前都過濾掉，因為像是.git的目錄不能希望刪除，並且也有提供<strong>each</strong>的方法，將thomascsd.github.io目錄下的子目錄及檔案都刪除。</p>\n<h3><a href=\"http://xn--api-pi9dv23km1t.xn--jslocalhostthomascsd-6f24br2udrsv81g.github.io\">第二步api.js的localhost更換成thomascsd.github.io</a></h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> $api <span class=\"token operator\">=</span> $blogSrc\n<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>node <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>baseName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>extension <span class=\"token operator\">===</span> <span class=\"token string\">'js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">readFileAsync</span><span class=\"token punctuation\">(</span>$api<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontent <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/http:\\/\\/localhost:3200/i</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://thomascsd.github.io'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> <span class=\"token function\">writeFileAsync</span><span class=\"token punctuation\">(</span>$api<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>因為app.js的檔名會包含雜湊值，所以使用<strong>filter</strong>取得檔名包含app及副檔名為js的檔案，最後讀取app.js內容，將localhost替換成thomascsd.github.io後，再寫回app.js。</p>\n<h3>第三步複製檔案至thomascsd.github.io目錄</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> blogPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>rootPath<span class=\"token punctuation\">,</span> blogDistPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n$blogSrc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$blogSrc\n<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nconsola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`step3:複製檔案至thomascsd.github.io內的檔案，name:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>node<span class=\"token punctuation\">.</span>pathName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">await</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>blogPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\nconsola<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>這邊很單純的，<a href=\"http://xn--distthomascsd-o11yu560aea0709bzq0aofa985ria.github.io\">將目錄dist複製至目錄thomascsd.github.io</a>，這樣即完成所有的步驟了，最後輸入<code>node deploy.js</code>即完成。</p>\n<h2>結論</h2>\n<p>個人是覺得這個套件簡化了處理檔案的一些煩瑣的操作，推薦給大家處理檔案的另外一種選擇。這次原始碼在<a href=\"https://github.com/thomascsd/thomascsd-blog/blob/master/deploy.js\">這裡</a>。</p>\n"
  },
  {
    "title": "從範例講解Promise概念",
    "bgImageUrl": "/images/06/06-0.jpg",
    "meta": {
      "index": 2,
      "fileName": "2018-08-12-ExampleOfPromise.md",
      "section": "/",
      "dirName": "/"
    },
    "date": "2018-08-12",
    "path": "/example-of-promise",
    "permalink": "/example-of-promise",
    "anchors": [
      [
        "#結論",
        "結論"
      ]
    ],
    "body": "<p>一般而言，呼叫多個ajax，最簡單的方式是用callback函式，如以下的範例\n執行完1個ajax之後，再執行另一個ajax。</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/thomascsd/ut3cv27k/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" allowpaymentrequest frameborder=\"0\"></iframe>\n<p>但是這樣會造成維護及讀code都不易，容易產生俗稱callback hell的問題，每次都想到下面這張圖。</p>\n<img class=\"img-responsive\" src=\"/images/06/06-1.png\">\n<p>所以有人想到Promise的解決方式</p>\n<p>例如下面的範例，getData1函式是直接回傳Promise這個物件，而不是直接回傳結果值，就好像是起了緩衝的作用，等到server將結果值回傳，最後再使用resolve將結果值回傳出去，並且可以使用then串連在一起，可讀性及維護性變高了。</p>\n<p>ES2015的Promise物件的範列</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/thomascsd/hu98b63j/4/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" allowpaymentrequest frameborder=\"0\"></iframe>\n<p>jQuery Deferred的物件的範例</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/thomascsd/e2gp57h6/6/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" allowpaymentrequest frameborder=\"0\"></iframe>\n<p>我最喜歡的用法，是使用async/ await，因為async/await是基於Promise，所以用像是同步的程式寫法來執行非同步的作業</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/thomascsd/xftmdsb9/3/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" allowpaymentrequest frameborder=\"0\"></iframe>\n<h1 id=\"\">結論</h1>\n<p>寫前端的程式，或多或少都會遇到同時發出多個Ajax的情況，這時Promise的概念就很重要</p>\n"
  },
  {
    "title": "使用Nuxt.js及Nuxtent建立Blog的心得",
    "bgImageUrl": "/images/05/05-0.jpg",
    "meta": {
      "index": 3,
      "fileName": "2018-06-23-NuxtjsAndNuxtent.md",
      "section": "/",
      "dirName": "/"
    },
    "date": "2018-06-23",
    "path": "/nuxtjs-and-nuxtent",
    "permalink": "/nuxtjs-and-nuxtent",
    "anchors": [],
    "body": "<p>Nuxt.js是內建SSR的vue.js框架，我最感興趣的部份是可輸出靜態的Html，如此就可以輕鬆的將程式部署至GitHub Page上，並且可以使用module來擴充功能。</p>\n<p>當我看到了Nuxtent這個module，它是可以取得Markdown內容的module，所以想將Blog用Nuxt.js重新翻寫。</p>\n<h2>Nuxtent Template</h2>\n<p>第一步快速建立的話，可使用<a href=\"https://github.com/nuxt-community/nuxtent-template\">Nuxtent Template</a>建立一個基本的網站架構，需要事先安裝<a href=\"https://github.com/vuejs/vue-cli\">vue-cli</a>。</p>\n<pre class=\"language-\"><code class=\"language-\">vue init nuxt-community/nuxtent-template my-site\n</code></pre>\n<h2>網站架構</h2>\n<img class=\"img-responsive\" src=\"/images/05/05-1.png\">\n<h3>page</h3>\n<p>建立網站的路由，例如在目錄中建立about.vue，網址會成為localhost:3000/about。</p>\n<h3>static</h3>\n<p>靜態資源，例如：圖片，路徑會基於根目錄，例如/images/bg.png</p>\n<h3>content</h3>\n<p>Nuxtent module特定的目錄，放置Markdown檔案的地方，也就是放入文章的地方</p>\n<h3>layout</h3>\n<p>預設layout為layout.vue，也可以自定layout，之後使用layout屬性指定自定的layout</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">asyncData</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      posts<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">$content</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Thomas Blog'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  layout<span class=\"token punctuation\">:</span> <span class=\"token string\">'customLayout'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2>設定檔</h2>\n<p>nuxtent.config.js</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Prism <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prismjs'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    permalink<span class=\"token punctuation\">:</span> <span class=\"token string\">'/:slug'</span><span class=\"token punctuation\">,</span>\n    page<span class=\"token punctuation\">:</span> <span class=\"token string\">'/_content'</span><span class=\"token punctuation\">,</span>\n    generate<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// for static build</span>\n      <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'getAll'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    isPost<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  api<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    baseURL<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://localhost:3200'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  parsers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    md<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        config<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">highlight</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> lang<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token string\">`&lt;pre class=\"language-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lang<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;code class=\"language-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lang<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Prism<span class=\"token punctuation\">.</span><span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>lang<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/code>&lt;/pre>`</span></span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3>content</h3>\n<ul>\n<li>\n<p>permalink：設定文章路徑的顯示方式。</p>\n</li>\n<li>\n<p>page：指定顯示文章內容的檔案名稱，預設為_cotent，即指向_cotent.vue。按照文件可以設定為多個。</p>\n</li>\n<li>\n<p>isPost:：查看<a href=\"https://nuxtent.now.sh/guide/writing\">官方文件</a>的說明不是很了解這個屬性的用法，但當看了<a href=\"https://github.com/nuxt-community/nuxtent-module/blob/9423a753c43bbbe69395b400f90b1291ac935084/lib/content/page.js#L161\">原始碼</a>後發現</p>\n</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">get</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isDev <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cached<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> filePath<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> section <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> meta\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>isPost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> fileDate <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/!?(\\d{4}-\\d{2}-\\d{2})/</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// YYYY-MM-DD</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fileDate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Post in \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>section<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" does not have a date!`</span></span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n          cached<span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> fileDate<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> stats <span class=\"token operator\">=</span> <span class=\"token function\">statSync</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n          cached<span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> dateFns<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>stats<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">,</span> <span class=\"token string\">'YYYY-MM-DD'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> cached<span class=\"token punctuation\">.</span>date\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>當true時，<a href=\"http://xn--markdown2017-06-20-HelloWorld-x273cn41k3m0b844bglqc32kwg5ehhf8n6l.md\">需要將markdown檔案名稱設成2017-06-20-HelloWorld.md</a>，即會取得檔名上的日期做為文章日期。</p>\n<p>當false，會使用檔案修改日期做為文章日期。</p>\n<h3>parser</h3>\n<p>我是參考<a href=\"https://nuxtent.now.sh/guide/configuration\">官方文件</a>，使用prismjs將Mardown的程式碼加上著色器功能。</p>\n<h2>取得內容</h2>\n<p>可以參考_content.vue的程式碼，使用<strong>get</strong>取得目前路徑的內容。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">post<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">$content</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>如果是要取得所有文章的話，可以使用<strong>getAll</strong>這個方法。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">posts<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">$content</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2>評論功能</h2>\n<p>想使用基於GitHub issues的評論功能，有發現<a href=\"https://github.com/imsun/gitment\">gitment</a>這個套件剛好符合我的需要，安裝及設定都很簡單。</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>row<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PostHeader <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/PostHeader'</span>\n<span class=\"token keyword\">import</span> Gitment <span class=\"token keyword\">from</span> <span class=\"token string\">'gitment'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">asyncData</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> app<span class=\"token punctuation\">,</span> route<span class=\"token punctuation\">,</span> payload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      post<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">$content</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> gitment <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gitment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional</span>\n      owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'thomascsd'</span><span class=\"token punctuation\">,</span>\n      repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'thomascsd.github.io'</span><span class=\"token punctuation\">,</span>\n      oauth<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        client_id<span class=\"token punctuation\">:</span> <span class=\"token string\">'client_id'</span><span class=\"token punctuation\">,</span>\n        client_secret<span class=\"token punctuation\">:</span> <span class=\"token string\">'client_secret'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    gitment<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'comments'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    PostHeader\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>我是參考這篇<a href=\"https://ihtcboy.com/2018/02/25/2018-02-25_Gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%8E%A5%E5%85%A5%E8%B8%A9%E5%9D%91%E6%95%99%E7%A8%8B/\">文章</a>。</p>\n<p>要注意的點是，第一次會顯示<strong>Error:Comments Not Initialized</strong>。</p>\n<img class=\"img-responsive\" src=\"/images/05/05-5.png\">\n<p>需要登入自己的Github帳號後，啟動應用程式。</p>\n<img class=\"img-responsive\" src=\"/images/05/05-6.png\">\n<p>成功之後，就會變成下圖</p>\n<img class=\"img-responsive\" src=\"/images/05/05-7.png\">\n<h2>部署</h2>\n<p>將靜態檔案部署至Github pages，我遇到了一些問題，按照範例設定會將NODE_ENV='production’及baseUrl會成為正式部署的路徑，<a href=\"http://xn--Blogthomascsd-9i5u501gd7hh21bk60f5r2a.github.io\">例如我的Blog網址thomascsd.github.io</a>。</p>\n<p>當使用npm generate時，卻會出現下列錯誤</p>\n<img class=\"img-responsive\" src=\"/images/05/05-2.png\">\n<p>最後發現，使用下列步驟就OK了</p>\n<ul>\n<li>不需要加上NODE_ENV</li>\n<li>baseUrl設定成預設的localhost:3200，並執行npm generate</li>\n<li>再使用VSCode搜索localhost:3200，即會發現dist/api.js 內容有baseURL:localhost:3200，然後將網址替換成正式環境，<a href=\"http://xn--Blogthomascsd-l27wu1wv30bzw6en90a.github.io\">如我的Blog網址thomascsd.github.io</a></li>\n</ul>\n<img class=\"img-responsive\" src=\"/images/05/05-3.png\">\n<ul>\n<li>最後就可以部署至GitHub page</li>\n</ul>\n<img class=\"img-responsive\" src=\"/images/05/05-4.png\">\n<h2>結論</h2>\n<p>很方便將一個Blog建立起來，但是缺乏一些功能，例如標籤、Archive功能，這些都要自己實作出來。原始碼可以參考<a href=\"https://github.com/thomascsd/thomascsd-blog\">這裡</a>。</p>\n"
  },
  {
    "title": "使用VSCode偵錯Node.js及Angular的小技巧",
    "meta": {
      "index": 4,
      "fileName": "2017-12-23-VscodeDebugForNodejsAndnAgular.md",
      "section": "/",
      "dirName": "/"
    },
    "date": "2017-12-23",
    "path": "/vscode-debug-for-nodejs-andn-agular",
    "permalink": "/vscode-debug-for-nodejs-andn-agular",
    "anchors": [],
    "body": "<p>使用Angular後就迷上了TypeScript，我有建立一個小專案叫做<a href=\"https://github.com/thomascsd/angular-express-starter\">angular-express-starter</a>，Server及Client端都是使用TypeScript建立的，而Client端是使用Angular CLI，然後Server端是使用Express.js。</p>\n<p>因為Node.js在&gt;8.0以上原生支援async/await，並且專案中\n也會使用sequelize.js，所以新增tsconfig.server.json，並且target會指定為<strong>ES6</strong>：</p>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/server\",\n    \"baseUrl\": \"\",\n    \"target\": \"es6\"\n  }\n}\n</code></pre>\n<p>而Client端是由Angular CLI建立的，並且tsconfig.json的tartget是指定<strong>ES5</strong>：</p>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"outDir\": \"./dist/out-tsc\",\n    \"baseUrl\": \"src\",\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"moduleResolution\": \"node\",\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"target\": \"es5\",\n    \"typeRoots\": [\n      \"node_modules/@types\",\n      \"node_modules/typescript/lib\"\n    ],\n    \"lib\": [\n      \"es2016\",\n      \"dom\"\n    ]\n  }\n}\n</code></pre>\n<p>偵錯時需要使用ts-node來啟用Node.js，而ts-node有個參數<strong>project</strong>可以指定tsconfig.json的路徑，在npm script可以這樣設定：</p>\n<pre class=\"language-\"><code class=\"language-\">\"start\": \"ts-node --project server ./server/app.ts\"\n</code></pre>\n<h2>Node.js的除錯</h2>\n<p>其實VSCode已經內建Node.js偵錯</p>\n<img class=\"img-responsive\" src=\"/images/03/03-1.png\" alt=\"nodejs debug\">\n<p>如上圖示所示，選擇「偵錯」&gt;「新增組態」，再選擇「Node.js: 啟動程式」即可。</p>\n<p>因為我是使用ts-node來啟用Node.js，需要傳入額外參數來指定tscofig.json的路徑，但是下列設定會發生錯誤，因為不支援二階參數：</p>\n<pre class=\"language-json\"><code class=\"language-json\">   {\n      \"name\": \"ts-node\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"args\": [\"${workspaceRoot}/server/index.ts\"],\n      \"runtimeArgs\": [\"--nolazy\", \"-r\", \"ts-node/register\", \"-p server\"],\n      \"sourceMaps\": true,y\n      \"cwd\": \"${workspaceRoot}\",\n      \"protocol\": \"inspector\",\n      \"env\": {\n        \"NODE_ENV\": \"dev\"\n      }\n</code></pre>\n<p>所以需要換個方式改寫，先建立一個命名為tshook.js的js檔，內容如下：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ts-node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  project<span class=\"token punctuation\">:</span> <span class=\"token string\">\"server/tsconfig.json\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>直接在tshook.js中執行ts-node，然後再指定tsconfig.json的路徑。lauch.json改為下列：</p>\n<pre class=\"language-json\"><code class=\"language-json\">    {\n      \"name\": \"ts-node\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"args\": [\"${workspaceRoot}/server/index.ts\"],\n      \"runtimeArgs\": [\"--nolazy\", \"-r\", \"${workspaceRoot}/tshook.js\"],\n      \"sourceMaps\": true,\n      \"cwd\": \"${workspaceRoot}\",\n      \"protocol\": \"inspector\",\n      \"env\": {\n        \"NODE_ENV\": \"dev\"\n      }\n    }\n</code></pre>\n<p>按下F5或是綠色播放鍵即可進入偵錯模式，就很像Visual Studio偵錯.Net的程式一樣。</p>\n<img class=\"img-responsive\" src=\"/images/03/03-2.png\" alt=\"ng debug\">\n<h2>Angular 偵錯</h2>\n<p>參考官方文件<a href=\"https://github.com/Microsoft/vscode-recipes/tree/master/Angular-CLI\">Chrome Debugging with Angular CLI</a>，有幾點需要注意：</p>\n<p>1.Angular CLI需要<strong>1.3</strong>以上。</p>\n<p>2.<a href=\"https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome\">Debugger for Chrome</a>套件需要<strong>3.1.4</strong>以上。</p>\n<blockquote>\n<p>需注意的是要偵錯時需先用<code>npm start</code>啟用Angular應用程式，之後就可以按F5或是綠色播放鍵進入偵錯模式。</p>\n</blockquote>\n<h2>結論</h2>\n<p>1.使用VSCode偵錯Node.js就很像Visual Studio偵錯 .Net程式一樣，按下F5就會啟動應用程式。</p>\n<p>2.偵錯Angular應用程式，需要執行ng serve啟動Angular，然後VSCode偵錯程式。</p>\n"
  },
  {
    "title": "在asp.net MVC上使用vue.js需注意的事項",
    "meta": {
      "index": 5,
      "fileName": "2017-10-08-VuejsInAspnetMvc.md",
      "section": "/",
      "dirName": "/"
    },
    "date": "2017-10-08",
    "path": "/vuejs-in-aspnet-mvc",
    "permalink": "/vuejs-in-aspnet-mvc",
    "anchors": [],
    "body": "<p>最近開始使用vue.js在公司的專案上，<a href=\"http://xn--asp-z38d7cz97h2hqz3dut0b.net\">並且專案是用asp.net</a> mvc來開發的，所以發現在.cshtml上無法使用vue.js的需要注意的小地方。</p>\n<p>第1個是@click之類的事件綁定簡寫方式，因為會和原本的Razor語法衝突，所以需要使用完整的寫法。</p>\n<p>下列的語法會發生錯誤</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>應該用完整的語法</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>第2個是attribure的資料綁定的簡寫方式，像是要指定圖片的路徑時，可以寫成這樣</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>defaultUrl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>但是當執行格式化文件時，冒號(:)會不見，這就產生莫名的bug，當初尋找原因就花了1個小時，所以要寫成下列語法就OK了。</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>defaultUrl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n</code></pre>\n"
  },
  {
    "title": "使用Jekyll建立Blog -1",
    "meta": {
      "index": 6,
      "fileName": "2017-07-13-BuildBlogWithJekyll.md",
      "section": "/",
      "dirName": "/"
    },
    "date": "2017-07-13",
    "path": "/build-blog-with-jekyll",
    "permalink": "/build-blog-with-jekyll",
    "anchors": [],
    "body": "<p>建立Blog的工具有很多，但是可以一鍵馬上完成架站及能夠完全客制化的工具就不多了，其中一個就是<a href=\"https://jekyllrb.com\">Jekyll</a>。</p>\n<p>但是Jekyll需要在本機安裝Ruby環境，這樣還是有點麻煩，還要先設定環境，之後我找到一個很方便的工具<a href=\"https://github.com/barryclark/jekyll-now\">Jekyll-now</a>，只要Fork就可以建立一個網站。</p>\n<ul>\n<li>\n<p>1.到<a href=\"https://github.com/barryclark/jekyll-now\">Jekyll-now</a>，按下Fork。\n<img class=\"img-responsive\" src=\"/images/01/jekyll-now1.png\" alt=\"jekyll-now1\"></p>\n</li>\n<li>\n<p>2.設定Respository的名稱，需要設定成自已的使用者名稱。\n<img class=\"img-responsive\" src=\"/images/01/jekyll-now2.png\" alt=\"jekyll-now1\"></p>\n</li>\n<li>\n<p>3.設定_config.yml後就可以完成一個基本的Blog了。\n<img class=\"img-responsive\" src=\"/images/01/jekyll-now3.png\" alt=\"jekyll-now3\"></p>\n</li>\n</ul>\n<h2>為自已的Blog自定樣式</h2>\n<p>因為預設的樣式一般來說很單，所以我找到另一個樣式，叫做<a href=\"https://github.com/BlackrockDigital/startbootstrap-clean-blog\">Clean Blog</a>。只需加工一下就能變成蠻有質感的網站。</p>\n<p>也是幾個步驟就可以完成</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>{% if page.title %}{{ page.title }} – {% endif %}{{ site.name }} – {{ site.description }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    {% include meta.html %}\n\n    <span class=\"token comment\">&lt;!-- Bootstrap Core CSS --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- Custom Fonts --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>https://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>stylesheet<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>text/css<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800<span class=\"token punctuation\">'</span></span>\n        <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>stylesheet<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>text/css<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- Theme CSS --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.baseurl }}/style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>alternate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>application/rss+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.name }} - {{ site.description }}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.baseurl }}/feed.xml<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/></span></span>\n\n    <span class=\"token comment\">&lt;!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries --></span>\n    <span class=\"token comment\">&lt;!-- WARNING: Respond.js doesn't work if you view the page via file:// --></span>\n    <span class=\"token comment\">&lt;!--[if lt IE 9]>\n        &lt;script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\">&lt;/script>\n        &lt;script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\">&lt;/script>\n        &lt;script src=\"http://html5shiv.googlecode.com/svn/trunk/html5.js\">&lt;/script>\n    &lt;![endif]--></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- Navigation --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>navbar navbar-default navbar-custom navbar-fixed-top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container-fluid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- Brand and toggle get grouped for better mobile display --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>navbar-header page-scroll<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>navbar-toggle<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-toggle</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>collapse<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-target</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#bs-example-navbar-collapse-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sr-only<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Toggle navigation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n                    Menu <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fa fa-bars<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>navbar-brand<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.baseurl }}/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ site.name }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n            <span class=\"token comment\">&lt;!-- Collect the nav links, forms, and other content for toggling --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>collapse navbar-collapse<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bs-example-navbar-collapse-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>nav navbar-nav navbar-right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.baseurl }}/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Blog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.baseurl }}/about<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- /.navbar-collapse --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- /.container --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span>\n\n    {{ content }}\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- Footer --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>row<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>list-inline text-center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://www.twitter.com/{{ site.footer-links.twitter }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fa-stack fa-lg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fa fa-circle fa-stack-2x<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span>\n                                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fa fa-twitter fa-stack-1x fa-inverse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://github.com/{{ site.footer-links.github }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fa-stack fa-lg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fa fa-circle fa-stack-2x<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span>\n                                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fa fa-github fa-stack-1x fa-inverse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>copyright text-muted<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- jQuery --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://code.jquery.com/jquery-3.2.1.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- Bootstrap Core JavaScript --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- Theme JavaScript --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.baseurl }}/scripts/clean-blog.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    {% include analytics.html %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<ul>\n<li>\n<p>1.將Clean Blog中的Index.html複製至_default.html，但是保留原本的temolate的語法。</p>\n</li>\n<li>\n<p>2 將jQuery及Bootstrap之類的JavaScript連結換成cdn外部的連結。</p>\n</li>\n<li>\n<p>3.因為每篇文章都可更換header的圖片，所以header也包含在{% raw %}{{content}}{% endraw %}裡，而不是固定在layout中。</p>\n</li>\n<li>\n<p>4.新增scripts的資料夾，將clean-blog.min.js新增至資料夾中，最後放_default.html即可。</p>\n<pre class=\"language-css\"><code class=\"language-css\">---\n---\n//\n// IMPORTS\n//\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">\"variables\"</span><span class=\"token punctuation\">;</span></span>\n// Syntax highlighting @import is at the bottom of this file\n\n<span class=\"token comment\">/**************/</span>\n<span class=\"token comment\">/* BASE RULES */</span>\n<span class=\"token comment\">/**************/</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Lora'</span>, <span class=\"token string\">'Times New Roman'</span>, serif<span class=\"token punctuation\">;</span>\n<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #333333<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">...\n\n.read-more</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">text-transform</span><span class=\"token punctuation\">:</span> uppercase<span class=\"token punctuation\">;</span>\n<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n// Settled on moving the import of syntax highlighting to the bottom of the CSS\n// ... Otherwise it really bloats up the top of the CSS file and makes it difficult to find the start\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">\"highlights\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">\"svg-icons\"</span><span class=\"token punctuation\">;</span></span>\n\n</code></pre>\n</li>\n<li>\n<p>5.將clean-blog.css的內容放入style.scss，但是原本的@import需保留，並且clean-blog.css沒有.read-more的樣式，所以這個也需要保留。</p>\n</li>\n</ul>\n"
  },
  {
    "title": "Hello World!",
    "meta": {
      "index": 7,
      "fileName": "2017-06-20-HelloWorld.md",
      "section": "/",
      "dirName": "/"
    },
    "date": "2017-06-20",
    "path": "/hello-world",
    "permalink": "/hello-world",
    "anchors": [],
    "body": "<p>第一篇文章，談談為什麼想寫Blog，有兩個原因：</p>\n<p>第一是ITHome有個鐵人幫幫忙的活動，其中有人說工程師就是要建Blog，所以開始建立自己的Blog，順便練習Angular。</p>\n<p>第二點是看了<a href=\"https://dotblogs.com.tw/hatelove/2017/03/26/why-engineers-should-keep-blogging\">我為什麼鼓勵工程師寫 blog | In 91</a>，想說寫程式這樣久，也有些心得可以分享，並且也可當成學習筆記，或是記錄曾遇到問題。\n但是有遇到難題，就是將Meteor部署至Google App Engine卡住了，然後發現了<a href=\"https://github.com/barryclark/jekyll-now\">jekyll-now</a>，只要簡單幾個步驟，就可以架好Blog並且能夠輕鬆客制化樣式，之後在慢慢解決部署的問題。</p>\n<p>所以開始囉!!</p>\n"
  }
]