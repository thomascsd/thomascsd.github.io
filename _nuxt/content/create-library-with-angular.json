{
  "title": "於Angular中，建立Library的心得",
  "bgImageUrl": "/images/10/10-0.jpg",
  "meta": {
    "index": 2,
    "fileName": "2019-02-20-CreateLibraryWithAngular.md",
    "section": "/",
    "dirName": "/"
  },
  "date": "2019-02-20",
  "path": "/create-library-with-angular",
  "permalink": "/create-library-with-angular",
  "anchors": [],
  "body": "<p>在Angular CLI 6.0以上就可以直接建立Library，而Library的用途可以將自已建立的元件發佈至NPM，或是專案一些共同的元件拆分出去。</p>\n<h2>建立Library</h2>\n<pre class=\"language-\"><code class=\"language-\">ng new ngx-lib-demo\nng g library shared-comp\n</code></pre>\n<p>先使用Angular CLI建立範例專案，再來用上列的指令，建立Library。有時會覺得記住CLI的參數很麻煩，會使用<a href=\"https://angularconsole.com/\">Angular Console</a>幫忙建立。</p>\n<img class=\"img-responsive\" src=\"/images/10/10-01.gif\">\n<pre class=\"language-\"><code class=\"language-\">ng g c header --project=shared-comp\n</code></pre>\n<p>接下來，在Library中建立component，這邊是建立header component，也可以使用Angular Console建立。</p>\n<img class=\"img-responsive\" src=\"/images/10/10-2.png\">\n<p>如上圖，我們所建立library會在目錄projects下，例如這次我建立的shared-comp，並且與一般的Angular專案不同，component位於lib目錄下。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//public_api.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib/header/header.component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib/shared-comp.module'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>接著，在public_api.ts中export我們所建立的header component。</p>\n<img class=\"img-responsive\" src=\"/images/10/10-3.png\">\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//app.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/platform-browser'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NgModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SharedCompModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'shared-comp'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">NgModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\ndeclarations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AppComponent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\nimports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>BrowserModule<span class=\"token punctuation\">,</span> SharedCompModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\nproviders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\nbootstrap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AppComponent<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--app.component.html--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>lib-header</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>lib-header</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Hello<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>使用指令<code>ng build shared-comp</code>建置完library後，再來就可以在Angular應用程式中，匯入我們建立在library中的component。</p>\n<h2>發佈至npm</h2>\n<pre class=\"language-\"><code class=\"language-\">ng build shared-comp --prod\ncd dist/shared-comp\nnpm publish\n</code></pre>\n<p>要如何將我們建立的conpont部署至npm呢?輸入上列指令即可，最後輸入npm publish，即可完成發佈的程序。</p>\n<pre class=\"language-json\"><code class=\"language-json\">\"scripts\": {\n\"build:lib\": \"ng build shared-comp --prod\",\n\"deploy\": \"cd dist/shared-comp &amp;&amp; npm publish\"\n}\n</code></pre>\n<p>但是每次都這樣打也很麻煩，所以就將這些指令寫成上面的npm script。</p>\n<h2>升級需注意的心得</h2>\n<p>我發現從Angular 5升級至Angular6/7時，除了輸入<code>ng update</code>外，還需另外調整一些設定才行，也可以參考這篇官方的<a href=\"https://github.com/angular/angular-cli/wiki/stories-create-library#note-for-upgraded-projects\">文章</a></p>\n<ul>\n<li>\n<p>tsconfig.json：需調整paths的路徑，路徑調整至 dist/project-name，不然會發現找不到package的錯誤。</p>\n</li>\n<li>\n<p>tsconfig.app.json：需要移除baseUrl。</p>\n</li>\n</ul>\n<h2>結論</h2>\n<p>Angular CLI是很強大的工具，輸入一些命令，即可產生Application或是Library，現在還可以搭配Angular Console，程式開發變得很方便，</p>\n"
}