{
  "title": "使用VSCode偵錯Node.js及Angular的小技巧",
  "meta": {
    "index": 2,
    "fileName": "2017-12-23-VscodeDebugForNodejsAndnAgular.md",
    "section": "/",
    "dirName": "/"
  },
  "date": "2017-12-23",
  "path": "/vscode-debug-for-nodejs-andn-agular",
  "permalink": "/vscode-debug-for-nodejs-andn-agular",
  "anchors": [],
  "body": "<p>使用Angular後就迷上了TypeScript，我有建立一個小專案叫做<a href=\"https://github.com/thomascsd/angular-express-starter\">angular-express-starter</a>，Server及Client端都是使用TypeScript建立的，而Client端是使用Angular CLI，然後Server端是使用Express.js。</p>\n<p>因為Node.js在&gt;8.0以上原生支援async/await，並且專案中\n也會使用sequelize.js，所以新增tsconfig.server.json，並且target會指定為<strong>ES6</strong>：</p>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/server\",\n    \"baseUrl\": \"\",\n    \"target\": \"es6\"\n  }\n}\n</code></pre>\n<p>而Client端是由Angular CLI建立的，並且tsconfig.json的tartget是指定<strong>ES5</strong>：</p>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"outDir\": \"./dist/out-tsc\",\n    \"baseUrl\": \"src\",\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"moduleResolution\": \"node\",\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"target\": \"es5\",\n    \"typeRoots\": [\n      \"node_modules/@types\",\n      \"node_modules/typescript/lib\"\n    ],\n    \"lib\": [\n      \"es2016\",\n      \"dom\"\n    ]\n  }\n}\n</code></pre>\n<p>偵錯時需要使用ts-node來啟用Node.js，而ts-node有個參數<strong>project</strong>可以指定tsconfig.json的路徑，在npm script可以這樣設定：</p>\n<pre class=\"language-\"><code class=\"language-\">\"start\": \"ts-node --project server ./server/app.ts\"\n</code></pre>\n<h2>Node.js的除錯</h2>\n<p>其實VSCode已經內建Node.js偵錯</p>\n<img class=\"img-responsive\" src=\"/images/03/03-1.png\" alt=\"nodejs debug\">\n<p>如上圖示所示，選擇「偵錯」&gt;「新增組態」，再選擇「Node.js: 啟動程式」即可。</p>\n<p>因為我是使用ts-node來啟用Node.js，需要傳入額外參數來指定tscofig.json的路徑，但是下列設定會發生錯誤，因為不支援二階參數：</p>\n<pre class=\"language-json\"><code class=\"language-json\">   {\n      \"name\": \"ts-node\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"args\": [\"${workspaceRoot}/server/index.ts\"],\n      \"runtimeArgs\": [\"--nolazy\", \"-r\", \"ts-node/register\", \"-p server\"],\n      \"sourceMaps\": true,y\n      \"cwd\": \"${workspaceRoot}\",\n      \"protocol\": \"inspector\",\n      \"env\": {\n        \"NODE_ENV\": \"dev\"\n      }\n</code></pre>\n<p>所以需要換個方式改寫，先建立一個命名為tshook.js的js檔，內容如下：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ts-node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  project<span class=\"token punctuation\">:</span> <span class=\"token string\">\"server/tsconfig.json\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>直接在tshook.js中執行ts-node，然後再指定tsconfig.json的路徑。lauch.json改為下列：</p>\n<pre class=\"language-json\"><code class=\"language-json\">    {\n      \"name\": \"ts-node\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"args\": [\"${workspaceRoot}/server/index.ts\"],\n      \"runtimeArgs\": [\"--nolazy\", \"-r\", \"${workspaceRoot}/tshook.js\"],\n      \"sourceMaps\": true,\n      \"cwd\": \"${workspaceRoot}\",\n      \"protocol\": \"inspector\",\n      \"env\": {\n        \"NODE_ENV\": \"dev\"\n      }\n    }\n</code></pre>\n<p>按下F5或是綠色播放鍵即可進入偵錯模式，就很像Visual Studio偵錯.Net的程式一樣。</p>\n<img class=\"img-responsive\" src=\"/images/03/03-2.png\" alt=\"ng debug\">\n<h2>Angular 偵錯</h2>\n<p>參考官方文件<a href=\"https://github.com/Microsoft/vscode-recipes/tree/master/Angular-CLI\">Chrome Debugging with Angular CLI</a>，有幾點需要注意：</p>\n<p>1.Angular CLI需要<strong>1.3</strong>以上。</p>\n<p>2.<a href=\"https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome\">Debugger for Chrome</a>套件需要<strong>3.1.4</strong>以上。</p>\n<blockquote>\n<p>需注意的是要偵錯時需先用<code>npm start</code>啟用Angular應用程式，之後就可以按F5或是綠色播放鍵進入偵錯模式。</p>\n</blockquote>\n<h2>結論</h2>\n<p>1.使用VSCode偵錯Node.js就很像Visual Studio偵錯 .Net程式一樣，按下F5就會啟動應用程式。</p>\n<p>2.偵錯Angular應用程式，需要執行ng serve啟動Angular，然後VSCode偵錯程式。</p>\n"
}