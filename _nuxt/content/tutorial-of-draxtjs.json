{
  "title": "draxt.js-簡化存取檔案的小幫手",
  "meta": {
    "index": 4,
    "fileName": "2018-09-07-TutorialOfDraxtjs.md",
    "section": "/",
    "dirName": "/"
  },
  "date": "2018-09-07",
  "path": "/tutorial-of-draxtjs",
  "permalink": "/tutorial-of-draxtjs",
  "anchors": [],
  "body": "<p>Node.js處理檔案我個人覺得不是很方便，有時候會覺得卡卡的。之前有發現Node.js套件<a href=\"https://github.com/ramhejazi/draxt\">draxt.js</a>，它封裝了<a href=\"https://github.com/isaacs/node-glob\">glob</a>和<a href=\"https://github.com/jprichardson/node-fs-extra\">fs-extra</a>這兩個套件，並提供類似jQuery的語法，讓檔案的處理變簡單了。</p>\n<p>因為我的Blog是分成兩個專案，一個是開發使用，一個是實際Blog的網站，而我使用nuxt.js建立Blog的心得，可以參考之前的<a href=\"/example-of-promise\">文章</a>。之前的複製檔案都是用手動，所以想寫個小程式幫助複製檔案，剛好趁這個機會練習使用draxt.js這個套件。</p>\n<h2>原始碼</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> util <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'util'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'draxt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> consola <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'consola'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> readFileAsync <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>readFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> writeFileAsync <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>writeFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> rootPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> blogDistPath <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/thomascsd.github.io/`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> $blogSrc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist/**'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> $blogDist <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> blogDistPath <span class=\"token operator\">+</span> <span class=\"token string\">'**'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    cwd<span class=\"token punctuation\">:</span> rootPath\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  $blogDist\n    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n      node <span class=\"token operator\">=></span>\n        <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>baseName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> node <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      consola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token string\">`step1-1:刪除thomascsd.github.io內的檔案，name:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>node<span class=\"token punctuation\">.</span>pathName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  consola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>`step2<span class=\"token punctuation\">:</span>api<span class=\"token punctuation\">.</span>js的localhost更換成thomascsd<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io`<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> $api <span class=\"token operator\">=</span> $blogSrc\n    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n      node <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>baseName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>extension <span class=\"token operator\">===</span> <span class=\"token string\">'js'</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">readFileAsync</span><span class=\"token punctuation\">(</span>$api<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  content <span class=\"token operator\">=</span> content\n    <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/http:\\/\\/localhost:3200/i</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://thomascsd.github.io'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">writeFileAsync</span><span class=\"token punctuation\">(</span>$api<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> blogPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>rootPath<span class=\"token punctuation\">,</span> blogDistPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  $blogSrc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  $blogSrc<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> node <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    consola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n      `step3<span class=\"token punctuation\">:</span>復製檔案至thomascsd<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io內的檔案，name<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">}</span>`\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>blogPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      consola<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">=></span> consola<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h2>程式說明</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> util <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'util'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'draxt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> consola <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'consola'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> readFileAsync <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>readFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> writeFileAsync <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>writeFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>一開始戴入所需的套件，這邊有用util.promisify將原本是callback型式的readFile及writeFile，轉換成Promise的型式。</p>\n<p>因為draxt.js的方法都是設計成回傳Promise物件，可以使用async/await的語法，所以這裡用async的IIFE將檔案操作的邏輯包起來。關於Promise，可以參考我的上一篇的<a href=\"/nuxtjs-and-nuxtent\">文章</a>。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> rootPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> blogDistPath <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/thomascsd.github.io/`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> $blogSrc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist/**'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> $blogDist <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> blogDistPath <span class=\"token operator\">+</span> <span class=\"token string\">'**'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\ncwd<span class=\"token punctuation\">:</span> rootPath\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>jQuery是使用CSS Selector來選擇元素，而draxt.js是使用glob pattern選取檔案或目錄，關於glog pattern可以參考<a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\">文件</a>。</p>\n<h3>第一步刪除thomascsd.github.io內的檔案</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">$blogDist\n  <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n    node <span class=\"token operator\">=></span>\n      <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>baseName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n      node<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> node <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    consola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token string\">`step1-1:刪除thomascsd.github.io內的檔案，name:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>node<span class=\"token punctuation\">.</span>pathName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>先用filter將包含.的目前都過濾掉，因為像是.git的目錄不能希望刪除，並且也有提供<strong>each</strong>的方法，將thomascsd.github.io目錄下的子目錄及檔案都刪除。</p>\n<h3><a href=\"http://xn--api-pi9dv23km1t.xn--jslocalhostthomascsd-6f24br2udrsv81g.github.io\">第二步api.js的localhost更換成thomascsd.github.io</a></h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> $api <span class=\"token operator\">=</span> $blogSrc\n<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>node <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>baseName<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">.</span>extension <span class=\"token operator\">===</span> <span class=\"token string\">'js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">readFileAsync</span><span class=\"token punctuation\">(</span>$api<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontent <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/http:\\/\\/localhost:3200/i</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://thomascsd.github.io'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> <span class=\"token function\">writeFileAsync</span><span class=\"token punctuation\">(</span>$api<span class=\"token punctuation\">.</span>pathName<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>因為app.js的檔名會包含雜湊值，所以使用<strong>filter</strong>取得檔名包含app及副檔名為js的檔案，最後讀取app.js內容，將localhost替換成thomascsd.github.io後，再寫回app.js。</p>\n<h3>第三步複製檔案至thomascsd.github.io目錄</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> blogPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>rootPath<span class=\"token punctuation\">,</span> blogDistPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n$blogSrc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$blogSrc\n<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nconsola<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`step3:複製檔案至thomascsd.github.io內的檔案，name:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>node<span class=\"token punctuation\">.</span>pathName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">await</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>blogPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\nconsola<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>這邊很單純的，<a href=\"http://xn--distthomascsd-o11yu560aea0709bzq0aofa985ria.github.io\">將目錄dist複製至目錄thomascsd.github.io</a>，這樣即完成所有的步驟了，最後輸入<code>node deploy.js</code>即完成。</p>\n<h2>結論</h2>\n<p>個人是覺得這個套件簡化了處理檔案的一些煩瑣的操作，推薦給大家處理檔案的另外一種選擇。這次原始碼在<a href=\"https://github.com/thomascsd/thomascsd-blog/blob/master/deploy.js\">這裡</a>。</p>\n"
}