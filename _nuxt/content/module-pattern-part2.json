{
  "title": "談談JavaScript Module part2",
  "bgImageUrl": "/images/08/08-0.jpg",
  "meta": {
    "index": 7,
    "fileName": "2018-12-23-ModulePatternPart2.md",
    "section": "/",
    "dirName": "/"
  },
  "date": "2018-12-23",
  "path": "/module-pattern-part2",
  "permalink": "/module-pattern-part2",
  "anchors": [],
  "body": "<p>這篇會繼續上篇的主題：Module，這篇會講述ES6（ES2015）Module寫法，而上一篇是<a href=\"https://thomascsd.github.io/module-pattern\">談談JavaScript Module part1</a>。</p>\n<h2>Module建立</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> doSomeThing <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Util</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>ES2015 Module是以檔案為基礎，也就是1個檔案視為1個Module，在檔案內需要被外面引用的function、class還是變數，使用<strong>export</strong>關鍵字輸出，</p>\n<h2>Module戴入</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">]</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./util.js'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>有export就有import，使用<strong>import</strong>關鍵字戴入剛剛所定義的function、class或是變數，之後用from指定所戴入的檔案是那一個，路徑是相對路徑。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">const</span> message  <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> message <span class=\"token keyword\">from</span> <span class=\"token string\">'./util.js'</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>如果在export的地方，加上default關鍵字時，import不需加上大括號。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">const</span> message  <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n\nexpot <span class=\"token keyword\">function</span> <span class=\"token function\">doSomeThing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">import</span> message<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> doSomeThing<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./util.js'</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>也可以兩者混用。</p>\n<h2>Dynamic import</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./my-module.js'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">module</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do something with the module.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>有時候會希望動能戴入Module，這時import變成了function，而回傳值是Promise。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> module <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./my-module.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>因回傳值是Promise，所以支援await關鍵字。</p>\n<h2>程式實作</h2>\n<h3>瀏覽器的支援</h3>\n<img class=\"img-responsive\" src=\"/images/09/09-1.png\">\n<p>根據caniuse的結果，現在全部的瀏覽器都有支援ES2015 Module，可以不用使用Webpack、Parcel之類的Module loader，直接使用原生語法就好了，但實務上還是需要Webpack之類的工具，幫忙將js打包、壓縮。</p>\n<h3>原生的寫法</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./index.js<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p>跟一般戴入script不同的地方在於，需指定type=&quot;module&quot;來告訴瀏覽器用Module的形式戴入script。範例原始碼在<a href=\"https://github.com/thomascsd/es-module-import\">這裡</a>。</p>\n<h3>戴入第三方套件需注意的地方</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./scripts/index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>jQuery<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>是用CDN的方式將jQuery戴入，在index.js中需指派$ = window.jQuery，因為在Module中無法取得全域變數，所以換個方式，用window.jQuery取得jQuery物件。</p>\n<h2>結論</h2>\n<p>現在幾乎每個瀏覽器都支援原生戴入Module，說不定未來不用任何工具，就可以開發Web Application。</p>\n"
}